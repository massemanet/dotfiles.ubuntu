# Read `man 5 sway` for a complete reference.

### Variables

# Logo key. Use Mod1 for Alt. Mod4 is Windows.
set $mod Mod4

# the internal display
set $internal LVDS-1

# Your preferred terminal emulator
set $term /usr/bin/kitty

# alttab
set $alttab $HOME/bin/alttab.sh

# launcher
set $launcher "bash -c 'compgen -c | grep -E "^[a-z]" | sort -u | wofi -G --dmenu | xargs -r swaymsg -t command exec'"

for_window [class="Brave-browser"] move window to workspace 1:brave
for_window [class="Chromium"] move window to workspace 2:chromium
for_window [class="Firefox"] move window to workspace 2:chromium
for_window [class="Spotify"] move window to workspace 3:spotify
for_window [app_id="kitty"] move window to workspace 4:term
for_window [app_id=".*term.*"] move window to workspace 4:term
for_window [app_id="emacs"] move window to workspace 5:emacs

workspace 1:brave output $internal
workspace 2:chromium output $internal
workspace 3:spotify output $internal

## still needed
xwayland force

### Idle configuration
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

set $locker 'swaylock -i hexdump.png -f -c 000000 --ignore-empty-password'
exec swayidle -w \
         timeout 300 'swaymsg "output * dpms off"' \
           resume 'swaymsg "output * dpms on"' \
         timeout 600 $locker \
         before-sleep $locker \
         after-resume 'swaymsg "output * enable"'

### Input configuration
input type:touchpad {
  natural_scroll enabled
  tap enabled
  middle_emulation enabled
  tap_button_map lrm
}

input type:keyboard {
  xkb_layout us,se
  xkb_options ctrl:nocaps,grp:shifts_toggle
  repeat_delay 400
  repeat_rate 40
}

### output config
#
# {0,0}     {1920,0}
# {0,1080}  {1920,1080}


#  Current mode: 1366x768 @ 60.001999 Hz
output 'Unknown 0x02D3 0x00000000' {
  pos 554 312
  scale 1
}

#  Current mode: 3200x1800 @ 60.000000 Hz
output 'Sharp Corporation 0x144A 0x00000000' {
  pos 320 180
  scale 2
}

#  Current mode: 3840x2160 @ 60.000000 Hz
output 'Unknown 0xA029 0x00000000' {
  pos 0 0
  scale 2
}

#  Current mode: 1920x1080 @ 60.000000 Hz
output 'Unknown 24G1WG4 0x00001D78' {
  pos 1920 0
  scale 1
}

#  Current mode: 1920x1080 @ 60.000000 Hz
output 'Dell Inc. DELL U2417H 5K9YD881CM9L' {
  pos 1920 0
  transform 270
}

#  Current mode: 1920x1080 @ 60.000000 Hz
output 'Dell Inc. DELL U2417H 5K9YD881CLTL' {
  pos 3000 0
  transform 90
}

#
# Status Bar:

bar {
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command $HOME/bin/status.sh
    separator_symbol :
    colors {
        statusline #ffffff
        background #323232
        separator #ee1111
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

### lid switch
# turn off internal screen when lid is closed

bindswitch lid:on  output $internal disable
bindswitch lid:off output $internal enable

### Key bindings
#
# Basics:
#
# focus
bindsym $mod+j focus left
bindsym $mod+k focus up
bindsym $mod+l focus down
bindsym $mod+semicolon focus right
bindsym $mod+shift+tab exec $alttab

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# start your launcher
bindsym $mod+d exec $launcher

bindsym $mod+v splitv
bindsym $mod+h splith

# sound
bindsym $mod+shift+v exec pavucontrol
for_window [app_id="pavucontrol"] floating enable, resize set width 1000 px height 400 px

# reload the configuration file
bindsym $mod+Shift+c reload

# lock screen
bindsym $mod+Shift+z exec $locker

# screen shot
bindsym $mod+shift+g exec grim -g "$(slurp -d)" /tmp/grim-$(date -Iseconds).png

# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Workspaces:
bindsym $mod+tab workspace back_and_forth

# switch to workspace
bindsym $mod+1 workspace 1:brave
bindsym $mod+2 workspace 2:chromium
bindsym $mod+3 workspace 3:spotify
bindsym $mod+4 workspace 4:term
bindsym $mod+5 workspace 5:emacs
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1:brave
bindsym $mod+Shift+2 move container to workspace 2:chromium
bindsym $mod+Shift+3 move container to workspace 3:spotify
bindsym $mod+Shift+4 move container to workspace 4:term
bindsym $mod+Shift+5 move container to workspace 5:emacs
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9

# move focused workspace to output
bindsym $mod+Shift+p move workspace to right
bindsym $mod+Shift+o move workspace to left
